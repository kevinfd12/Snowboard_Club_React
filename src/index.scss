@import './styles/main.scss';

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

html {
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
}

// headers correction
$mod_1: 1.2; // mobile
$mod_2: 1.5; // desktop

h1 {
  font-size: $mod_1 * $mod_1 * $mod_1 * $mod_1 * 1rem;
  @include fluid-type(
    $min_width,
    $max_width,
    $mod_1 * $mod_1 * $mod_1 * $mod_1 * $min_font,
    $mod_2 * $mod_2 * $mod_2 * $mod_2 * $min_font
  );
  $color1: $blue;
  $color2: $green;
  @include linear-text($color1, $color2);
}

h2 {
  font-size: $mod_1 * $mod_1 * $mod_1 * 1rem;
  @include fluid-type(
    $min_width,
    $max_width,
    $mod_1 * $mod_1 * $mod_1 * $min_font,
    $mod_2 * $mod_2 * $mod_2 * $min_font
  );
}

h3 {
  font-size: $mod_1 * $mod_1 * 1rem;
  @include fluid-type(
    $min_width,
    $max_width,
    $mod_1 * $mod_1 * $min_font,
    $mod_2 * $mod_2 * $min_font
  );
}

html {
  font-size: 62.5%; // 10px
  font-family: $text-minor;
  letter-spacing: 1px;
}

h1,
h2,
h3 {
  font-family: $text-main;
  text-transform: uppercase;
  font-weight: 700;
  text-align: center;
}

.paragraph {
  line-height: 1.5;

  @media (min-width: 768px) {
    line-height: 1.75;
  }
}

button {
  border: none;
}

.paragraph {
  line-height: 1.5;

  @media (min-width: 768px) {
    line-height: 1.75;
  }
}
